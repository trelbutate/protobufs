// @generated by protoc-gen-es v1.2.0
// @generated from file meshtastic/admin.proto (package meshtastic, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Channel } from "./channel_pb.js";
import { DeviceMetadata, User } from "./mesh_pb.js";
import { Config } from "./config_pb.js";
import { ModuleConfig } from "./module_config_pb.js";
import { DeviceConnectionStatus } from "./connection_status_pb.js";

/**
 *
 * This message is handled by the Admin module and is responsible for all settings/channel read/write operations.
 * This message is used to do settings operations to both remote AND local nodes.
 * (Prior to 1.2 these operations were done via special ToRadio operations)
 *
 * @generated from message meshtastic.AdminMessage
 */
export const AdminMessage = proto3.makeMessageType(
  "meshtastic.AdminMessage",
  () => [
    { no: 1, name: "get_channel_request", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "payload_variant" },
    { no: 2, name: "get_channel_response", kind: "message", T: Channel, oneof: "payload_variant" },
    { no: 3, name: "get_owner_request", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 4, name: "get_owner_response", kind: "message", T: User, oneof: "payload_variant" },
    { no: 5, name: "get_config_request", kind: "enum", T: proto3.getEnumType(AdminMessage_ConfigType), oneof: "payload_variant" },
    { no: 6, name: "get_config_response", kind: "message", T: Config, oneof: "payload_variant" },
    { no: 7, name: "get_module_config_request", kind: "enum", T: proto3.getEnumType(AdminMessage_ModuleConfigType), oneof: "payload_variant" },
    { no: 8, name: "get_module_config_response", kind: "message", T: ModuleConfig, oneof: "payload_variant" },
    { no: 10, name: "get_canned_message_module_messages_request", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 11, name: "get_canned_message_module_messages_response", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "payload_variant" },
    { no: 12, name: "get_device_metadata_request", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 13, name: "get_device_metadata_response", kind: "message", T: DeviceMetadata, oneof: "payload_variant" },
    { no: 14, name: "get_ringtone_request", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 15, name: "get_ringtone_response", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "payload_variant" },
    { no: 16, name: "get_device_connection_status_request", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 17, name: "get_device_connection_status_response", kind: "message", T: DeviceConnectionStatus, oneof: "payload_variant" },
    { no: 18, name: "set_ham_mode", kind: "message", T: HamParameters, oneof: "payload_variant" },
    { no: 32, name: "set_owner", kind: "message", T: User, oneof: "payload_variant" },
    { no: 33, name: "set_channel", kind: "message", T: Channel, oneof: "payload_variant" },
    { no: 34, name: "set_config", kind: "message", T: Config, oneof: "payload_variant" },
    { no: 35, name: "set_module_config", kind: "message", T: ModuleConfig, oneof: "payload_variant" },
    { no: 36, name: "set_canned_message_module_messages", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "payload_variant" },
    { no: 37, name: "set_ringtone_message", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "payload_variant" },
    { no: 64, name: "begin_edit_settings", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 65, name: "commit_edit_settings", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 95, name: "reboot_ota_seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "payload_variant" },
    { no: 96, name: "exit_simulator", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload_variant" },
    { no: 97, name: "reboot_seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "payload_variant" },
    { no: 98, name: "shutdown_seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "payload_variant" },
    { no: 99, name: "factory_reset", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "payload_variant" },
    { no: 100, name: "nodedb_reset", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "payload_variant" },
  ],
);

/**
 *
 * TODO: REPLACE
 *
 * @generated from enum meshtastic.AdminMessage.ConfigType
 */
export const AdminMessage_ConfigType = proto3.makeEnum(
  "meshtastic.AdminMessage.ConfigType",
  [
    {no: 0, name: "DEVICE_CONFIG"},
    {no: 1, name: "POSITION_CONFIG"},
    {no: 2, name: "POWER_CONFIG"},
    {no: 3, name: "NETWORK_CONFIG"},
    {no: 4, name: "DISPLAY_CONFIG"},
    {no: 5, name: "LORA_CONFIG"},
    {no: 6, name: "BLUETOOTH_CONFIG"},
  ],
);

/**
 *
 * TODO: REPLACE
 *
 * @generated from enum meshtastic.AdminMessage.ModuleConfigType
 */
export const AdminMessage_ModuleConfigType = proto3.makeEnum(
  "meshtastic.AdminMessage.ModuleConfigType",
  [
    {no: 0, name: "MQTT_CONFIG"},
    {no: 1, name: "SERIAL_CONFIG"},
    {no: 2, name: "EXTNOTIF_CONFIG"},
    {no: 3, name: "STOREFORWARD_CONFIG"},
    {no: 4, name: "RANGETEST_CONFIG"},
    {no: 5, name: "TELEMETRY_CONFIG"},
    {no: 6, name: "CANNEDMSG_CONFIG"},
    {no: 7, name: "AUDIO_CONFIG"},
    {no: 8, name: "REMOTEHARDWARE_CONFIG"},
  ],
);

/**
 *
 * Parameters for setting up Meshtastic for ameteur radio usage
 *
 * @generated from message meshtastic.HamParameters
 */
export const HamParameters = proto3.makeMessageType(
  "meshtastic.HamParameters",
  () => [
    { no: 1, name: "call_sign", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tx_power", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "frequency", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "short_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

