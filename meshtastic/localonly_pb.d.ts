// @generated by protoc-gen-es v1.2.0
// @generated from file meshtastic/localonly.proto (package meshtastic, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Config_BluetoothConfig, Config_DeviceConfig, Config_DisplayConfig, Config_LoRaConfig, Config_NetworkConfig, Config_PositionConfig, Config_PowerConfig } from "./config_pb.js";
import type { ModuleConfig_AudioConfig, ModuleConfig_CannedMessageConfig, ModuleConfig_ExternalNotificationConfig, ModuleConfig_MQTTConfig, ModuleConfig_RangeTestConfig, ModuleConfig_RemoteHardwareConfig, ModuleConfig_SerialConfig, ModuleConfig_StoreForwardConfig, ModuleConfig_TelemetryConfig } from "./module_config_pb.js";

/**
 * @generated from message meshtastic.LocalConfig
 */
export declare class LocalConfig extends Message<LocalConfig> {
  /**
   *
   * The part of the config that is specific to the Device
   *
   * @generated from field: meshtastic.Config.DeviceConfig device = 1;
   */
  device?: Config_DeviceConfig;

  /**
   *
   * The part of the config that is specific to the GPS Position
   *
   * @generated from field: meshtastic.Config.PositionConfig position = 2;
   */
  position?: Config_PositionConfig;

  /**
   *
   * The part of the config that is specific to the Power settings
   *
   * @generated from field: meshtastic.Config.PowerConfig power = 3;
   */
  power?: Config_PowerConfig;

  /**
   *
   * The part of the config that is specific to the Wifi Settings
   *
   * @generated from field: meshtastic.Config.NetworkConfig network = 4;
   */
  network?: Config_NetworkConfig;

  /**
   *
   * The part of the config that is specific to the Display
   *
   * @generated from field: meshtastic.Config.DisplayConfig display = 5;
   */
  display?: Config_DisplayConfig;

  /**
   *
   * The part of the config that is specific to the Lora Radio
   *
   * @generated from field: meshtastic.Config.LoRaConfig lora = 6;
   */
  lora?: Config_LoRaConfig;

  /**
   *
   * The part of the config that is specific to the Bluetooth settings
   *
   * @generated from field: meshtastic.Config.BluetoothConfig bluetooth = 7;
   */
  bluetooth?: Config_BluetoothConfig;

  /**
   *
   * A version integer used to invalidate old save files when we make
   * incompatible changes This integer is set at build time and is private to
   * NodeDB.cpp in the device code.
   *
   * @generated from field: uint32 version = 8;
   */
  version: number;

  constructor(data?: PartialMessage<LocalConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "meshtastic.LocalConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalConfig;

  static equals(a: LocalConfig | PlainMessage<LocalConfig> | undefined, b: LocalConfig | PlainMessage<LocalConfig> | undefined): boolean;
}

/**
 * @generated from message meshtastic.LocalModuleConfig
 */
export declare class LocalModuleConfig extends Message<LocalModuleConfig> {
  /**
   *
   * The part of the config that is specific to the MQTT module
   *
   * @generated from field: meshtastic.ModuleConfig.MQTTConfig mqtt = 1;
   */
  mqtt?: ModuleConfig_MQTTConfig;

  /**
   *
   * The part of the config that is specific to the Serial module
   *
   * @generated from field: meshtastic.ModuleConfig.SerialConfig serial = 2;
   */
  serial?: ModuleConfig_SerialConfig;

  /**
   *
   * The part of the config that is specific to the ExternalNotification module
   *
   * @generated from field: meshtastic.ModuleConfig.ExternalNotificationConfig external_notification = 3;
   */
  externalNotification?: ModuleConfig_ExternalNotificationConfig;

  /**
   *
   * The part of the config that is specific to the Store & Forward module
   *
   * @generated from field: meshtastic.ModuleConfig.StoreForwardConfig store_forward = 4;
   */
  storeForward?: ModuleConfig_StoreForwardConfig;

  /**
   *
   * The part of the config that is specific to the RangeTest module
   *
   * @generated from field: meshtastic.ModuleConfig.RangeTestConfig range_test = 5;
   */
  rangeTest?: ModuleConfig_RangeTestConfig;

  /**
   *
   * The part of the config that is specific to the Telemetry module
   *
   * @generated from field: meshtastic.ModuleConfig.TelemetryConfig telemetry = 6;
   */
  telemetry?: ModuleConfig_TelemetryConfig;

  /**
   *
   * The part of the config that is specific to the Canned Message module
   *
   * @generated from field: meshtastic.ModuleConfig.CannedMessageConfig canned_message = 7;
   */
  cannedMessage?: ModuleConfig_CannedMessageConfig;

  /**
   *
   * The part of the config that is specific to the Audio module
   *
   * @generated from field: meshtastic.ModuleConfig.AudioConfig audio = 9;
   */
  audio?: ModuleConfig_AudioConfig;

  /**
   *
   * The part of the config that is specific to the Remote Hardware module
   *
   * @generated from field: meshtastic.ModuleConfig.RemoteHardwareConfig remote_hardware = 10;
   */
  remoteHardware?: ModuleConfig_RemoteHardwareConfig;

  /**
   *
   * A version integer used to invalidate old save files when we make
   * incompatible changes This integer is set at build time and is private to
   * NodeDB.cpp in the device code.
   *
   * @generated from field: uint32 version = 8;
   */
  version: number;

  constructor(data?: PartialMessage<LocalModuleConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "meshtastic.LocalModuleConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocalModuleConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocalModuleConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocalModuleConfig;

  static equals(a: LocalModuleConfig | PlainMessage<LocalModuleConfig> | undefined, b: LocalModuleConfig | PlainMessage<LocalModuleConfig> | undefined): boolean;
}

