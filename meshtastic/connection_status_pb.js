// @generated by protoc-gen-es v1.2.0
// @generated from file meshtastic/connection_status.proto (package meshtastic, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message meshtastic.DeviceConnectionStatus
 */
export const DeviceConnectionStatus = proto3.makeMessageType(
  "meshtastic.DeviceConnectionStatus",
  () => [
    { no: 1, name: "wifi", kind: "message", T: WifiConnectionStatus, opt: true },
    { no: 2, name: "ethernet", kind: "message", T: EthernetConnectionStatus, opt: true },
    { no: 3, name: "bluetooth", kind: "message", T: BluetoothConnectionStatus, opt: true },
    { no: 4, name: "serial", kind: "message", T: SerialConnectionStatus, opt: true },
  ],
);

/**
 *
 * WiFi connection status
 *
 * @generated from message meshtastic.WifiConnectionStatus
 */
export const WifiConnectionStatus = proto3.makeMessageType(
  "meshtastic.WifiConnectionStatus",
  () => [
    { no: 1, name: "status", kind: "message", T: NetworkConnectionStatus },
    { no: 2, name: "ssid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "rssi", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 *
 * Ethernet connection status
 *
 * @generated from message meshtastic.EthernetConnectionStatus
 */
export const EthernetConnectionStatus = proto3.makeMessageType(
  "meshtastic.EthernetConnectionStatus",
  () => [
    { no: 1, name: "status", kind: "message", T: NetworkConnectionStatus },
  ],
);

/**
 *
 * Ethernet or WiFi connection status
 *
 * @generated from message meshtastic.NetworkConnectionStatus
 */
export const NetworkConnectionStatus = proto3.makeMessageType(
  "meshtastic.NetworkConnectionStatus",
  () => [
    { no: 1, name: "ip_address", kind: "scalar", T: 7 /* ScalarType.FIXED32 */ },
    { no: 2, name: "is_connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "is_mqtt_connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "is_syslog_connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 *
 * Bluetooth connection status
 *
 * @generated from message meshtastic.BluetoothConnectionStatus
 */
export const BluetoothConnectionStatus = proto3.makeMessageType(
  "meshtastic.BluetoothConnectionStatus",
  () => [
    { no: 1, name: "pin", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "rssi", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "is_connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 *
 * Serial connection status
 *
 * @generated from message meshtastic.SerialConnectionStatus
 */
export const SerialConnectionStatus = proto3.makeMessageType(
  "meshtastic.SerialConnectionStatus",
  () => [
    { no: 1, name: "baud", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "is_connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

